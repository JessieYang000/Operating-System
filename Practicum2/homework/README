This project is target to build a remote file system, which allows following operations: 
- Write: wite a file from a local path to a remote path. If the remote path doesn't exist, create it and then write into it.
- GET: read from a remote path and write into a local path. If the local path doesn't exist, create it and then write into it.
- RM: delete a remote file from the remote server.

The program also allows multiple users to operate concurrently, which can be tested by running the last script below.

## Commands for Test
Before testing, run `make clean && make` to compile the program. Then run `./server` and `./client` to start the server and client correspondingly.

- Write
    - valid: `rfs WRITE data/localfoo.txt folder/foo.txt`
    - invalid local path: `rfs WRITE data1/localfoo.txt folder/foo.txt`
    - valid: `rfs WRITE data/localfoo.txt another_folder/foo.txt`
- GET
    - valid with existing local path: `rfs GET folder/foo.txt data/localfoo.txt`
    - valid with new local path: `rfs GET folder/foo.txt data2/localfoo.txt`
    - invalid remote path: `rfs GET folder1/foo.txt data/localfoo.txt`
    - valid with a new local path: `rfs GET folder/foo.txt data3/localfoo.txt`
- RM
    - valid: `rfs RM folder/foo.txt`
    - valid: `rfs RM folder/`
    - valid: `rfs RM folder`
    - invalid remote path: `rfs RM test/data.txt`
    - invalid input: `rfs RM folder test/data.txt`
    - valid: `rfs RM /`
- Multiple Clients
    - `./concurrent_test.sh`